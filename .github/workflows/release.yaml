---
name: Make Release

on:
  push:
    branches:
      - 'releases/**'

jobs:
  linux-artefact:
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        dotnet_version: ['8.0.x']
        os:
          - ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - uses: actions/setup-dotnet@v1
      - run: cd src && dotnet build --configuration Release
      - name: Create artifact linux
        run: |
          dotnet tool install --global dotnet-rpm-net8
          dotnet tool install --global dotnet-deb-net8
          dotnet tool install --global dotnet-tarball-net8
          echo "building packeges"
          dotnet restore src/LacmusApp.sln
          mkdir -p bin/linux
          cd src/LacmusApp.Avalonia
          dotnet rpm install
          dotnet deb install
          dotnet tarball install
          dotnet rpm --framework net8.0 -c Release --runtime="linux-x64" -o ../../bin/linux LacmusApp.Avalonia.csproj
          dotnet deb --framework net8.0 -c Release --runtime="linux-x64" -o ../../bin/linux LacmusApp.Avalonia.csproj
          dotnet tarball --framework net8.0 -c Release --runtime="linux-x64" -o ../../bin/linux LacmusApp.Avalonia.csproj
        shell: bash
      - uses: actions/upload-artifact@v3
        with:
          name: artifact-linux-deb
          path: |
            ./bin/linux/*.deb
      - uses: actions/upload-artifact@v3
        with:
          name: artifact-linux-rpm
          path: |
            ./bin/linux/*.rpm
      - uses: actions/upload-artifact@v3
        with:
          name: artifact-linux-tar
          path: |
            ./bin/linux/*.tar.gz
  windows-artefact:
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        dotnet_version: ['8.0.x']
        os:
          - windows-latest
    steps:
      - uses: actions/checkout@v3
      - uses: actions/setup-dotnet@v1
      - name: Create artifact windows
        run: |
          dotnet tool install --global dotnet-zip-net8
          echo "building packeges"
          dotnet restore src/LacmusApp.sln
          mkdir -p bin/windows
          mkdir -p bin/windows/app
          mkdir -p bin/windows/installer
          cd src/LacmusApp.Avalonia
          dotnet zip install
          dotnet zip --framework net8.0 -c Release --runtime="win-x64" -o ../../bin/windows LacmusApp.Avalonia.csproj
          dotnet publish --framework net8.0 -c Release --runtime="win-x64" -o ../../bin/windows/app LacmusApp.Avalonia.csproj
          cd ../../
          curl -L --output bin/windows/installer/temp.zip https://github.com/lacmus-foundation/inno-setup-gihtub-action/releases/download/v.1.0.0/innoSetupCli.zip
          unzip bin/windows/installer/temp.zip -d bin/windows/installer
          ./bin/windows/installer/ISCC.exe packages/windows/script.iss
        shell: bash
      - uses: actions/upload-artifact@v3
        with:
          name: artifact-windows-zip
          path: |
            ./bin/windows/*.zip
      - uses: actions/upload-artifact@v3
        with:
          name: artifact-windows-setup
          path: |
            ./bin/windows/lacmusSetup.exe
  osx-artefact:
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        dotnet_version: ['8.0.x']
        os:
          - osx-latest
    steps:
      - uses: actions/checkout@v3
      - uses: actions/setup-dotnet@v1
      - name: Create artifact osx
        run: |
          bash packages/osx/build-osx.sh
          dotnet tool install --global dotnet-tarball-net8
          echo "building packeges"
          dotnet restore src/LacmusApp.sln
          cd src/LacmusApp.Avalonia
          dotnet tarball install
          dotnet tarball --framework net8.0 -c Release --runtime="osx-x64" -o ../../bin/osx LacmusApp.Avalonia.csproj
        shell: bash
      - uses: actions/upload-artifact@v3
        with:
          name: artifact-osx-tar
          path: |
            ./bin/osx/*.tar.gz
      - uses: actions/upload-artifact@v3
        with:
          name: artifact-osx-app
          path: |
            ./bin/osx/*.zip
